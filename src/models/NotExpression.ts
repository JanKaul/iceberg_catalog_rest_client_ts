/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Expression } from './Expression';
import {
    ExpressionFromJSON,
    ExpressionFromJSONTyped,
    ExpressionToJSON,
} from './Expression';

/**
 * 
 * @export
 * @interface NotExpression
 */
export interface NotExpression {
    /**
     * 
     * @type {string}
     * @memberof NotExpression
     */
    type: string;
    /**
     * 
     * @type {Expression}
     * @memberof NotExpression
     */
    child: Expression;
}

/**
 * Check if a given object implements the NotExpression interface.
 */
export function instanceOfNotExpression(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "child" in value;

    return isInstance;
}

export function NotExpressionFromJSON(json: any): NotExpression {
    return NotExpressionFromJSONTyped(json, false);
}

export function NotExpressionFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotExpression {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'child': ExpressionFromJSON(json['child']),
    };
}

export function NotExpressionToJSON(value?: NotExpression | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'child': ExpressionToJSON(value.child),
    };
}

