/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TableIdentifier } from './TableIdentifier';
import {
    TableIdentifierFromJSON,
    TableIdentifierFromJSONTyped,
    TableIdentifierToJSON,
} from './TableIdentifier';

/**
 * 
 * @export
 * @interface RenameTableRequest
 */
export interface RenameTableRequest {
    /**
     * 
     * @type {TableIdentifier}
     * @memberof RenameTableRequest
     */
    source: TableIdentifier;
    /**
     * 
     * @type {TableIdentifier}
     * @memberof RenameTableRequest
     */
    destination: TableIdentifier;
}

/**
 * Check if a given object implements the RenameTableRequest interface.
 */
export function instanceOfRenameTableRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "destination" in value;

    return isInstance;
}

export function RenameTableRequestFromJSON(json: any): RenameTableRequest {
    return RenameTableRequestFromJSONTyped(json, false);
}

export function RenameTableRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RenameTableRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': TableIdentifierFromJSON(json['source']),
        'destination': TableIdentifierFromJSON(json['destination']),
    };
}

export function RenameTableRequestToJSON(value?: RenameTableRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': TableIdentifierToJSON(value.source),
        'destination': TableIdentifierToJSON(value.destination),
    };
}

