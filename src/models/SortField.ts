/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NullOrder } from './NullOrder';
import {
    NullOrderFromJSON,
    NullOrderFromJSONTyped,
    NullOrderToJSON,
} from './NullOrder';
import type { SortDirection } from './SortDirection';
import {
    SortDirectionFromJSON,
    SortDirectionFromJSONTyped,
    SortDirectionToJSON,
} from './SortDirection';

/**
 * 
 * @export
 * @interface SortField
 */
export interface SortField {
    /**
     * 
     * @type {number}
     * @memberof SortField
     */
    sourceId: number;
    /**
     * 
     * @type {string}
     * @memberof SortField
     */
    transform: string;
    /**
     * 
     * @type {SortDirection}
     * @memberof SortField
     */
    direction: SortDirection;
    /**
     * 
     * @type {NullOrder}
     * @memberof SortField
     */
    nullOrder: NullOrder;
}

/**
 * Check if a given object implements the SortField interface.
 */
export function instanceOfSortField(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceId" in value;
    isInstance = isInstance && "transform" in value;
    isInstance = isInstance && "direction" in value;
    isInstance = isInstance && "nullOrder" in value;

    return isInstance;
}

export function SortFieldFromJSON(json: any): SortField {
    return SortFieldFromJSONTyped(json, false);
}

export function SortFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): SortField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceId': json['source-id'],
        'transform': json['transform'],
        'direction': SortDirectionFromJSON(json['direction']),
        'nullOrder': NullOrderFromJSON(json['null-order']),
    };
}

export function SortFieldToJSON(value?: SortField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source-id': value.sourceId,
        'transform': value.transform,
        'direction': SortDirectionToJSON(value.direction),
        'null-order': NullOrderToJSON(value.nullOrder),
    };
}

