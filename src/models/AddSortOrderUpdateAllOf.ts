/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SortOrder } from './SortOrder';
import {
    SortOrderFromJSON,
    SortOrderFromJSONTyped,
    SortOrderToJSON,
} from './SortOrder';

/**
 * 
 * @export
 * @interface AddSortOrderUpdateAllOf
 */
export interface AddSortOrderUpdateAllOf {
    /**
     * 
     * @type {SortOrder}
     * @memberof AddSortOrderUpdateAllOf
     */
    sortOrder: SortOrder;
}

/**
 * Check if a given object implements the AddSortOrderUpdateAllOf interface.
 */
export function instanceOfAddSortOrderUpdateAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sortOrder" in value;

    return isInstance;
}

export function AddSortOrderUpdateAllOfFromJSON(json: any): AddSortOrderUpdateAllOf {
    return AddSortOrderUpdateAllOfFromJSONTyped(json, false);
}

export function AddSortOrderUpdateAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddSortOrderUpdateAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sortOrder': SortOrderFromJSON(json['sort-order']),
    };
}

export function AddSortOrderUpdateAllOfToJSON(value?: AddSortOrderUpdateAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sort-order': SortOrderToJSON(value.sortOrder),
    };
}

