/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PartitionField
 */
export interface PartitionField {
    /**
     * 
     * @type {number}
     * @memberof PartitionField
     */
    fieldId?: number;
    /**
     * 
     * @type {number}
     * @memberof PartitionField
     */
    sourceId: number;
    /**
     * 
     * @type {string}
     * @memberof PartitionField
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PartitionField
     */
    transform: string;
}

/**
 * Check if a given object implements the PartitionField interface.
 */
export function instanceOfPartitionField(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "transform" in value;

    return isInstance;
}

export function PartitionFieldFromJSON(json: any): PartitionField {
    return PartitionFieldFromJSONTyped(json, false);
}

export function PartitionFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartitionField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldId': !exists(json, 'field-id') ? undefined : json['field-id'],
        'sourceId': json['source-id'],
        'name': json['name'],
        'transform': json['transform'],
    };
}

export function PartitionFieldToJSON(value?: PartitionField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field-id': value.fieldId,
        'source-id': value.sourceId,
        'name': value.name,
        'transform': value.transform,
    };
}

