/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TableMetadata } from './TableMetadata';
import {
    TableMetadataFromJSON,
    TableMetadataFromJSONTyped,
    TableMetadataToJSON,
} from './TableMetadata';

/**
 * 
 * @export
 * @interface CommitTableResponse
 */
export interface CommitTableResponse {
    /**
     * 
     * @type {string}
     * @memberof CommitTableResponse
     */
    metadataLocation: string;
    /**
     * 
     * @type {TableMetadata}
     * @memberof CommitTableResponse
     */
    metadata: TableMetadata;
}

/**
 * Check if a given object implements the CommitTableResponse interface.
 */
export function instanceOfCommitTableResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadataLocation" in value;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function CommitTableResponseFromJSON(json: any): CommitTableResponse {
    return CommitTableResponseFromJSONTyped(json, false);
}

export function CommitTableResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitTableResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadataLocation': json['metadata-location'],
        'metadata': TableMetadataFromJSON(json['metadata']),
    };
}

export function CommitTableResponseToJSON(value?: CommitTableResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata-location': value.metadataLocation,
        'metadata': TableMetadataToJSON(value.metadata),
    };
}

