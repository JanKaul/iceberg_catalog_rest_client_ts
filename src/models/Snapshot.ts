/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SnapshotSummary } from './SnapshotSummary';
import {
    SnapshotSummaryFromJSON,
    SnapshotSummaryFromJSONTyped,
    SnapshotSummaryToJSON,
} from './SnapshotSummary';

/**
 * 
 * @export
 * @interface Snapshot
 */
export interface Snapshot {
    /**
     * 
     * @type {number}
     * @memberof Snapshot
     */
    snapshotId: number;
    /**
     * 
     * @type {number}
     * @memberof Snapshot
     */
    parentSnapshotId?: number;
    /**
     * 
     * @type {number}
     * @memberof Snapshot
     */
    sequenceNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof Snapshot
     */
    timestampMs: number;
    /**
     * Location of the snapshot's manifest list file
     * @type {string}
     * @memberof Snapshot
     */
    manifestList: string;
    /**
     * 
     * @type {SnapshotSummary}
     * @memberof Snapshot
     */
    summary: SnapshotSummary;
    /**
     * 
     * @type {number}
     * @memberof Snapshot
     */
    schemaId?: number;
}

/**
 * Check if a given object implements the Snapshot interface.
 */
export function instanceOfSnapshot(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "snapshotId" in value;
    isInstance = isInstance && "timestampMs" in value;
    isInstance = isInstance && "manifestList" in value;
    isInstance = isInstance && "summary" in value;

    return isInstance;
}

export function SnapshotFromJSON(json: any): Snapshot {
    return SnapshotFromJSONTyped(json, false);
}

export function SnapshotFromJSONTyped(json: any, ignoreDiscriminator: boolean): Snapshot {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'snapshotId': json['snapshot-id'],
        'parentSnapshotId': !exists(json, 'parent-snapshot-id') ? undefined : json['parent-snapshot-id'],
        'sequenceNumber': !exists(json, 'sequence-number') ? undefined : json['sequence-number'],
        'timestampMs': json['timestamp-ms'],
        'manifestList': json['manifest-list'],
        'summary': SnapshotSummaryFromJSON(json['summary']),
        'schemaId': !exists(json, 'schema-id') ? undefined : json['schema-id'],
    };
}

export function SnapshotToJSON(value?: Snapshot | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'snapshot-id': value.snapshotId,
        'parent-snapshot-id': value.parentSnapshotId,
        'sequence-number': value.sequenceNumber,
        'timestamp-ms': value.timestampMs,
        'manifest-list': value.manifestList,
        'summary': SnapshotSummaryToJSON(value.summary),
        'schema-id': value.schemaId,
    };
}

